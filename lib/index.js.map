{"version":3,"file":"index.js","names":["BbPromise","require","path","slugify","chalk","semver","Runtimes","LayersService","BucketService","CloudFormationService","ZipService","LocalFolders","Dependencies","ServerlessLayers","serverless","options","cacheObject","initialized","hooks","bind","then","init","deployLayers","finalizeDeploy","cleanUpLayerVersions","cleanUpAllLayers","provider","getProvider","service","region","getRegion","log","main","version","getVersion","lt","process","exit","runtimes","settings","getSettings","cliOpts","layerName","currentSettings","enabledFuncs","functions","deploySingle","indexOf","logGroup","initServices","breakLine","arn","warn","cleanUpLayers","retainVersions","currentLayerName","zipService","dependencies","localFolders","layersService","bucketService","cloudFormationService","inboundSetting","deploymentBucketObject","layersDeploymentBucketEncryption","serverSideEncryption","forceInstall","dependencyInstall","compileDir","customInstallationCommand","layersDeploymentBucket","deploymentBucket","getDefaultSettings","inboundSettings","custom","Array","isArray","forEach","Object","keys","mergeCommonSettings","hasSettingsVerified","manifest","JSON","stringify","patterns","getFile","remoteSettings","putFile","customHash","hashFileName","remoteHashFile","hash","parse","remoteHash","localDir","artifact","relateLayerWithFunctions","hasSettingsChanges","hasFoldersChanges","hasDepsChanges","hasDependenciesChanges","hasZipChanged","hasCustomHashChanged","verifyChanges","some","x","mergePackageOptions","getLayerArn","existentLayerArn","skipInstallation","inverse","green","logArn","install","copyFolders","uploadZipFile","publishVersion","getDepsPath","LayerVersionArn","stackName","getStackName","runtimeDir","lower","replacement","naming","Error","join","cwd","getLayerName","serviceStage","stage","deploymentPrefix","getDeploymentPrefix","replace","layersArn","getOutputs","outputs","logicalId","getOutputLogicalId","find","OutputKey","OutputValue","getLambdaLayerOutputLogicalId","packagePatterns","pkg","opts","individually","excludeDevDependencies","excludeFile","hasRule","push","layerArn","funcs","length","layers","magenta","bold","funcName","isEnabled","from","Set","resources","Outputs","outputName","assign","Value","Export","Name","localPackage","map","lambdaFunc","currentLayerARN","msg","signal","console","greenBright","white","cli","yellowBright","red","pattern","name","formated","text","Ref","String","module","exports"],"sources":["../src/index.js"],"sourcesContent":["const BbPromise = require('bluebird');\nconst path = require('path');\nconst slugify = require('slugify');\nconst chalk = require('chalk');\nconst semver = require('semver');\nconst Runtimes = require('./runtimes');\nconst LayersService = require('./aws/LayersService');\nconst BucketService = require('./aws/BucketService');\nconst CloudFormationService = require('./aws/CloudFormationService');\nconst ZipService = require('./package/ZipService');\nconst LocalFolders = require('./package/LocalFolders');\nconst Dependencies = require('./package/Dependencies');\n\nclass ServerlessLayers {\n  constructor(serverless, options) {\n    this.cacheObject = {};\n    this.options = options;\n    this.serverless = serverless;\n    this.initialized = false;\n\n    // hooks\n    this.hooks = {\n      'before:package:function:package': () => BbPromise.bind(this)\n        .then(() => {\n          return this.init()\n            .then(() => this.deployLayers())\n        }),\n      'before:package:initialize': () => BbPromise.bind(this)\n        .then(() => {\n          return this.init()\n            .then(() => this.deployLayers())\n        }),\n      'aws:info:displayLayers': () => BbPromise.bind(this)\n        .then(() => this.init())\n        .then(() => this.finalizeDeploy()),\n      'after:deploy:function:deploy': () => BbPromise.bind(this)\n        .then(() => this.init())\n        .then(() => this.finalizeDeploy()),\n      'after:deploy:deploy': () => BbPromise.bind(this)\n        .then(() => this.init())\n        .then(() => this.cleanUpLayerVersions()),\n      'plugin:uninstall:uninstall': () => BbPromise.bind(this)\n        .then(() => {\n          return this.init()\n            .then(() => this.cleanUpAllLayers())\n        }),\n      'remove:remove': () => BbPromise.bind(this)\n        .then(() => {\n          return this.init()\n            .then(() => this.cleanUpAllLayers())\n        })\n    };\n  }\n\n  async init() {\n    if (this.initialized) {\n      return;\n    }\n\n    this.provider = this.serverless.getProvider('aws');\n    this.service = this.serverless.service;\n    this.options.region = this.provider.getRegion();\n\n    // bindings\n    this.log = this.log.bind(this);\n    this.main = this.main.bind(this);\n\n    const version = this.serverless.getVersion();\n\n    if (semver.lt(version, '1.34.0')) {\n      this.log(`Error: Please install serverless >= 1.34.0 (current ${this.serverless.getVersion()})`);\n      process.exit(1);\n    }\n  }\n\n  async deployLayers() {\n    this.runtimes = new Runtimes(this);\n    const settings = this.getSettings();\n\n    const cliOpts = this.provider.options;\n\n    for (const layerName in settings) {\n      const currentSettings = settings[layerName];\n      const enabledFuncs = currentSettings.functions;\n\n      // deploying a single function\n      const deploySingle = !!(cliOpts.function && enabledFuncs);\n\n      // skip layers that is not related with specified function\n      if (deploySingle && enabledFuncs.indexOf(cliOpts.function) === -1) {\n        continue;\n      }\n\n      this.logGroup(layerName);\n      await this.initServices(layerName, currentSettings);\n      await this.main();\n    }\n\n    this.breakLine();\n  }\n\n  async cleanUpAllLayers() {\n    this.runtimes = new Runtimes(this);\n    const settings = this.getSettings();\n    for (const layerName in settings) {\n      const currentSettings = settings[layerName];\n      this.logGroup(layerName);\n\n      if (currentSettings.arn) {\n        this.warn(` (skipped) arn: ${currentSettings.arn}`);\n        continue;\n      }\n\n      await this.initServices(layerName, currentSettings);\n      await this.cleanUpLayers();\n    }\n  }\n\n  async cleanUpLayerVersions() {\n    this.runtimes = new Runtimes(this);\n    const settings = this.getSettings();\n\n    for (const layerName in settings) {\n      const currentSettings = settings[layerName];\n      this.logGroup(layerName);\n\n      if (currentSettings.arn) {\n        this.warn(` (skipped) arn: ${currentSettings.arn}`);\n        continue;\n      }\n\n      if (!currentSettings.retainVersions) {\n        continue;\n      }\n\n      this.log('Cleaning up layer versions...');\n\n      await this.initServices(layerName, currentSettings);\n      await this.cleanUpLayers(currentSettings.retainVersions);\n    }\n  }\n\n  async initServices(layerName, settings) {\n    this.currentLayerName = layerName;\n    this.settings = settings;\n    this.zipService = new ZipService(this);\n    this.dependencies = new Dependencies(this);\n    this.localFolders = new LocalFolders(this);\n    this.layersService = new LayersService(this);\n    this.bucketService = new BucketService(this);\n    this.cloudFormationService = new CloudFormationService(this);\n    this.initialized = true;\n  }\n\n  mergeCommonSettings(inboundSetting) {\n    const { deploymentBucketObject } = this.service.provider;\n\n    let layersDeploymentBucketEncryption;\n    if (deploymentBucketObject) {\n      layersDeploymentBucketEncryption = deploymentBucketObject.serverSideEncryption;\n    }\n\n    return {\n      path: '.',\n      functions: null,\n      forceInstall: false,\n      retainVersions: null,\n      dependencyInstall: true,\n      compileDir: '.serverless',\n      customInstallationCommand: null,\n      layersDeploymentBucket: this.service.provider.deploymentBucket,\n      layersDeploymentBucketEncryption,\n      ...this.runtimes.getDefaultSettings(inboundSetting)\n    };\n  }\n\n  getSettings() {\n    const inboundSettings = (this.serverless.service.custom || {})[\n      'serverless-layers'\n    ];\n\n    if (Array.isArray(inboundSettings)) {\n      const settings = {};\n      inboundSettings.forEach(inboundSetting => {\n        const layerName = Object.keys(inboundSetting)[0];\n        settings[layerName] = this.mergeCommonSettings(inboundSetting[layerName]);\n      });\n      return settings;\n    }\n\n    return {\n      default: this.mergeCommonSettings(inboundSettings)\n    }\n  }\n\n  hasSettingsChanges() {\n    // don't check settings changes twice\n    if (this.hasSettingsVerified) {\n      return false;\n    }\n\n    const manifest = '__meta__/manifest-settings.json';\n    const currentSettings = JSON.stringify({\n      ...this.settings,\n      patterns: this.service.package.patterns\n    });\n\n    // settings checked\n    this.hasSettingsVerified = true;\n\n    return this.bucketService.getFile(manifest).then((remoteSettings) => {\n\n      // create and return true (changed)\n      if (!remoteSettings) {\n        return this.bucketService.putFile(manifest, currentSettings)\n          .then(() => true);\n      }\n\n      if (remoteSettings !== currentSettings) {\n        return this.bucketService.putFile(manifest, currentSettings)\n          .then(() => true);\n      }\n\n      return false;\n    });\n  }\n\n  async hasCustomHashChanged() {\n    if (!this.settings.customHash) {\n      return false;\n    }\n\n    const hashFileName = 'customHash.json';\n    const remoteHashFile = await this.bucketService.getFile(hashFileName);\n\n    if (!remoteHashFile) {\n      this.log('no previous custom hash found, putting new remote hash');\n      await this.bucketService.putFile(\n        hashFileName, JSON.stringify({ hash: this.settings.customHash })\n      );\n      return true;\n    }\n\n    const { hash: remoteHash } = JSON.parse(remoteHashFile);\n    if (remoteHash === this.settings.customHash) {\n      return false;\n    }\n\n    await this.bucketService.putFile(\n      hashFileName, JSON.stringify({ hash: this.settings.customHash })\n    );\n    this.log('identified custom hash change!');\n    return true;\n  }\n\n  async main() {\n    const {\n      arn,\n      localDir,\n      artifact,\n      forceInstall,\n      dependencyInstall\n    } = this.settings;\n\n    // static ARN\n    if (arn) {\n      this.relateLayerWithFunctions(arn);\n      return;\n    }\n\n    await this.runtimes.init();\n    await this.dependencies.init();\n    await this.localFolders.init();\n\n    // it avoids issues if user changes some configuration\n    // which will not be applied till dependencies be changed\n    let hasSettingsChanges = await this.hasSettingsChanges();\n\n    // check if directories content has changed\n    // comparing hash md5 remote with local folder\n    let hasFoldersChanges = false;\n    if (localDir) {\n      hasFoldersChanges = await this.localFolders.hasFoldersChanges();\n    }\n\n    // check if dependencies has changed comparing\n    // remote package.json with local one\n    let hasDepsChanges = false;\n    if (dependencyInstall) {\n      hasDepsChanges = await this.runtimes.hasDependenciesChanges();\n    }\n\n    let hasZipChanged = false;\n    if (artifact) {\n      hasZipChanged = await this.zipService.hasZipChanged();\n    }\n\n    const hasCustomHashChanged = await this.hasCustomHashChanged();\n\n    // It checks if something has changed\n    let verifyChanges = [\n      hasZipChanged,\n      hasDepsChanges,\n      hasFoldersChanges,\n      hasSettingsChanges,\n      hasCustomHashChanged,\n    ].some(x => x === true);\n\n    // merge package default options\n    this.mergePackageOptions();\n\n    // It returns the layer arn if exists.\n    const existentLayerArn = await this.getLayerArn();\n\n    // It improves readability\n    const skipInstallation = (\n      !verifyChanges && !forceInstall && existentLayerArn\n    );\n\n    /**\n     * If no changes, and layer arn available,\n     * it doesn't require re-installing dependencies.\n     */\n    if (skipInstallation) {\n     this.log(`${chalk.inverse.green(' No changes ')}! Using same layer arn: ${this.logArn(existentLayerArn)}`);\n     this.relateLayerWithFunctions(existentLayerArn);\n     return;\n    }\n\n    // ENABLED by default\n    if (dependencyInstall && !artifact) {\n      await this.dependencies.install();\n    }\n\n    if (localDir && !artifact) {\n      await this.localFolders.copyFolders();\n    }\n\n    await this.zipService.package();\n    await this.bucketService.uploadZipFile();\n    const version = await this.layersService.publishVersion();\n    await this.bucketService.putFile(this.dependencies.getDepsPath());\n\n    this.relateLayerWithFunctions(version.LayerVersionArn);\n  }\n\n  getLayerName() {\n    const stackName = this.getStackName();\n    const { runtimeDir } = this.settings;\n    return slugify(`${stackName}-${runtimeDir}-${this.currentLayerName}`, {\n      lower: true,\n      replacement: '-'\n    });\n  }\n\n  getStackName() {\n    return this.provider.naming.getStackName();\n  }\n\n  getBucketEncryptiom() {\n    return this.settings.layersDeploymentBucketEncryption;\n  }\n\n  getBucketName() {\n    if (!this.settings.layersDeploymentBucket) {\n      throw new Error(\n        'Please, you should specify \"deploymentBucket\" or \"layersDeploymentBucket\" option for this plugin!\\n'\n      );\n    }\n    return this.settings.layersDeploymentBucket;\n  }\n\n  getPathZipFileName() {\n    if (this.settings.artifact) {\n      return `${path.join(process.cwd(), this.settings.artifact)}`;\n    }\n    return `${path.join(process.cwd(), this.settings.compileDir, this.getLayerName())}.zip`;\n  }\n\n  getBucketLayersPath() {\n    const serviceStage = `${this.serverless.service.service}/${this.options.stage}`;\n\n    let deploymentPrefix = 'serverless';\n    if (this.provider.getDeploymentPrefix) {\n      deploymentPrefix = this.provider.getDeploymentPrefix();\n    }\n\n    return path.join(\n      deploymentPrefix,\n      serviceStage,\n      'layers'\n    ).replace(/\\\\/g, '/');\n  }\n\n  async getLayerArn() {\n    if (!this.cacheObject.layersArn) {\n      this.cacheObject.layersArn = {};\n    }\n\n    // returns cached arn\n    if (this.cacheObject.layersArn[this.currentLayerName]) {\n      return this.cacheObject.layersArn[this.currentLayerName];\n    }\n\n    const outputs = await this.cloudFormationService.getOutputs();\n\n    if (!outputs) return null;\n\n    const logicalId = this.getOutputLogicalId();\n\n    const arn = (outputs.find(x => x.OutputKey === logicalId) || {}).OutputValue;\n\n    // cache arn\n    this.cacheObject.layersArn[this.currentLayerName] = arn;\n\n    return arn;\n  }\n\n  getOutputLogicalId() {\n    return this.provider.naming.getLambdaLayerOutputLogicalId(this.getLayerName());\n  }\n\n  mergePackageOptions() {\n    const { packagePatterns, artifact } = this.settings;\n    const pkg = this.service.package;\n\n    const opts = {\n      individually: false,\n      excludeDevDependencies: false,\n      patterns: []\n    };\n\n    this.service.package = {...opts, ...pkg};\n\n    for (const excludeFile of packagePatterns) {\n      const hasRule = (this.service.package.patterns || '').indexOf(excludeFile);\n      if (hasRule === -1) {\n        this.service.package.patterns.push(excludeFile);\n      }\n    }\n\n    if (artifact) {\n      this.service.package.patterns.push(artifact);\n    }\n  }\n\n  relateLayerWithFunctions(layerArn) {\n    this.log('Adding layers...');\n    const { functions } = this.service;\n    const funcs = this.settings.functions;\n    const cliOpts = this.provider.options;\n\n    // Attaches to provider level when\n    // no functions available. It happens when\n    // someone want to use serverless to create all layers\n    // or resources but not the functions.\n    if (!functions || Object.keys(functions).length === 0) {\n      // Simple validations when layers attribute is null.\n      if (!this.service.provider.layers) {\n        this.service.provider.layers = []\n      }\n\n      this.service.provider.layers.push(layerArn);\n\n      this.log(\n        `${chalk.magenta.bold('provider')} - ${this.logArn(layerArn)}`,\n        ' ✓'\n      );\n    } else {\n      Object.keys(functions).forEach(funcName => {\n        if (cliOpts.function && cliOpts.function !== funcName) {\n          return;\n        }\n\n        let isEnabled = !funcs;\n\n        if (Array.isArray(funcs) && funcs.indexOf(funcName) !== -1) {\n          isEnabled = true;\n        }\n\n        if (isEnabled) {\n          // if this function has other layers add ours too so it applies\n          functions[funcName].layers = functions[funcName].layers || [];\n          functions[funcName].layers.push(layerArn);\n          functions[funcName].layers = Array.from(new Set(functions[funcName].layers));\n          this.log(`function.${chalk.magenta.bold(funcName)} - ${this.logArn(layerArn)}`, ' ✓');\n        } else {\n          this.warn(`(Skipped) function.${chalk.magenta.bold(funcName)}`, ` x`);\n        }\n      });\n    }\n\n    this.service.resources = this.service.resources || {};\n    this.service.resources.Outputs = this.service.resources.Outputs || {};\n\n    const outputName = this.getOutputLogicalId();\n\n    Object.assign(this.service.resources.Outputs, {\n      [outputName]: {\n        Value: layerArn,\n        Export: {\n          Name: outputName\n        }\n      }\n    });\n  }\n\n  getDependenciesList() {\n    return Object.keys((this.localPackage.dependencies||[])).map(x => (\n      `${x}@${this.localPackage.dependencies[x]}`\n    ));\n  }\n\n  async finalizeDeploy() {\n    const cliOpts = this.provider.options;\n    this.logGroup(\"Layers Info\");\n    Object.keys(this.service.functions).forEach(funcName => {\n      const lambdaFunc = this.service.functions[funcName];\n      const layers = lambdaFunc.layers || [];\n\n      if (!cliOpts.function && layers.length === 0) {\n        this.warn(`(skipped) function.${chalk.magenta.bold(funcName)}`);\n        return;\n      }\n\n      layers.forEach((currentLayerARN) => {\n        if (cliOpts.function && cliOpts.function === funcName) {\n          this.log(`function.${chalk.magenta.bold(funcName)} = layers.${this.logArn(currentLayerARN)}`);\n          return;\n        }\n        this.log(`function.${chalk.magenta.bold(funcName)} = layers.${this.logArn(currentLayerARN)}`);\n      });\n    });\n    this.breakLine();\n  }\n\n  log(msg, signal=' ○') {\n    console.log('...' + `${chalk.greenBright.bold(signal)} ${chalk.white(msg)}`);\n  }\n\n  logGroup(msg) {\n    this.breakLine();\n    this.serverless.cli.log(`[ LayersPlugin ]: ${chalk.magenta.bold('=>')} ${chalk.greenBright.bold(msg)}`);\n  }\n\n  warn(msg, signal=' ∅') {\n    console.log('...' + chalk.yellowBright(`${chalk.yellowBright.bold(signal)} ${msg}`));\n  }\n\n  error(msg, signal=' ⊗') {\n    console.log('...' + chalk.red(`${signal} ${chalk.white.bold(msg)}`));\n  }\n\n  cleanUpLayers(retainVersions) {\n    return this.layersService.cleanUpLayers(retainVersions);\n  }\n\n  breakLine() {\n    console.log('\\n');\n  }\n\n  logArn(arn) {\n    let pattern = /arn:aws:lambda:([^:]+):([0-9]+):layer:([^:]+):([0-9]+)/g;\n    let region = chalk.bold('$1');\n    let name = chalk.magenta('$3');\n    let formated = chalk.white(`arn:aws:lambda:${region}:*********:${name}:$4`);\n\n    let text = \"\";\n    switch (typeof arn) {\n      case 'object':\n        if (arn.Ref) {\n          text = `logicalId:[${chalk.bold('Ref')}=`;\n          text += `${chalk.magenta(arn.Ref)}]`;\n        }\n        break;\n      case 'string':\n        text = arn;\n        break;\n      default:\n        text = String(arn);\n        break;\n    }\n    return text.replace(pattern, formated);\n  }\n}\n\nmodule.exports = ServerlessLayers;\n"],"mappings":"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"}
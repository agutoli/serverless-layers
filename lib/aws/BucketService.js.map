{"version":3,"file":"BucketService.js","names":["fs","require","path","S3Key","AbstractService","UploadService","filename","value","join","plugin","getBucketLayersPath","test","process","platform","replace","log","params","Bucket","bucketName","Key","zipFileKeyName","ServerSideEncryption","getBucketEncryptiom","Body","createReadStream","getPathZipFileName","awsRequest","checkError","then","result","body","file","getStream","keyPath","getKey","toString","e","message","dependenciesPath","settings","dependenceFilename","module","exports"],"sources":["../../src/aws/BucketService.js"],"sourcesContent":["const fs = require('fs');\nconst path = require('path');\n\nconst S3Key = require('./S3Key');\nconst AbstractService = require('../AbstractService');\n\nclass UploadService extends AbstractService {\n  keyPath(filename) {\n    let value = path.join(this.plugin.getBucketLayersPath(), filename);\n    if (/^win/.test(process.platform)) {\n      value = value.replace(/\\\\/g, '/');\n    }\n    return value;\n  }\n\n  async uploadZipFile() {\n    this.plugin.log('Uploading layer package...');\n\n    const params = {\n      Bucket: this.bucketName,\n      Key: this.zipFileKeyName,\n      ServerSideEncryption: this.plugin.getBucketEncryptiom(),\n      Body: fs.createReadStream(this.plugin.getPathZipFileName())\n    };\n\n    return this.awsRequest('S3:putObject', params, { checkError: true })\n      .then((result) => {\n        this.plugin.log('OK...');\n        return result;\n      });\n  }\n\n  async putFile(filename, body) {\n    const file = new S3Key(filename);\n    this.plugin.log(`Uploading remote ${filename}...`);\n\n    let Body = body;\n\n    if (!body) {\n      Body = file.getStream();\n    }\n\n    const params = {\n      Body,\n      Bucket: this.bucketName,\n      Key: this.keyPath(file.getKey()),\n      ServerSideEncryption: this.plugin.getBucketEncryptiom()\n    };\n\n    return this.awsRequest('S3:putObject', params, { checkError: true })\n      .then((result) => {\n        this.plugin.log('OK...');\n        return result;\n      });\n  }\n\n  async getFile(filename) {\n    const file = new S3Key(filename);\n    this.plugin.log(`Downloading ${file.getKey()} from bucket...`);\n\n    const params = {\n      Bucket: this.bucketName,\n      Key: this.keyPath(file.getKey())\n    };\n\n    return this.awsRequest('S3:getObject', params)\n      .then((result) => result.Body.toString())\n      .catch((e) => {\n        this.plugin.log(`${filename} ${e.message}.`);\n        return null;\n      });\n  }\n\n  async uploadDependencesFile() {\n    const { dependenciesPath } = this.plugin.settings;\n\n    this.plugin.log(`Uploading remote ${dependenciesPath}...`);\n\n    const params = {\n      Bucket: this.bucketName,\n      Key: this.dependenceFilename,\n      ServerSideEncryption: this.plugin.getBucketEncryptiom(),\n      Body: fs.createReadStream(this.plugin.settings.dependenciesPath)\n    };\n\n    return this.awsRequest('S3:putObject', params, { checkError: true })\n      .then((result) => {\n        this.plugin.log('OK...');\n        return result;\n      });\n  }\n\n  async downloadDependencesFile() {\n    const { dependenciesPath } = this.plugin.settings;\n    this.plugin.log(`Downloading ${dependenciesPath} from bucket...`);\n\n    const params = {\n      Bucket: this.bucketName,\n      Key: this.dependenceFilename\n    };\n\n    return this.awsRequest('S3:getObject', params)\n      .then((result) => result.Body.toString())\n      .catch((e) => {\n        this.plugin.log(`${dependenciesPath} ${e.message}.`);\n        return null;\n      });\n  }\n}\n\nmodule.exports = UploadService;\n"],"mappings":"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"}
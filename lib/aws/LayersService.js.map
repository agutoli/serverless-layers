{"version":3,"file":"LayersService.js","names":["AbstractService","require","LayersService","params","Content","S3Bucket","bucketName","S3Key","zipFileKeyName","LayerName","layerName","Description","CompatibleRuntimes","plugin","settings","compatibleRuntimes","CompatibleArchitectures","compatibleArchitectures","awsRequest","checkError","then","result","log","cacheObject","LayerVersionArn","retainVersions","response","LayerVersions","length","deletionCandidates","selectVersionsToDelete","deleteQueue","map","layerVersion","Version","VersionNumber","Promise","all","cleanUpLayers","versions","sort","a","b","parseInt","slice","module","exports"],"sources":["../../src/aws/LayersService.js"],"sourcesContent":["const AbstractService = require('../AbstractService');\n\nclass LayersService extends AbstractService {\n  async publishVersion() {\n    const params = {\n      Content: {\n        S3Bucket: this.bucketName,\n        S3Key: this.zipFileKeyName\n      },\n      LayerName: this.layerName,\n      Description: 'created by serverless-layers plugin',\n\n      CompatibleRuntimes: this.plugin.settings.compatibleRuntimes,\n      CompatibleArchitectures: this.plugin.settings.compatibleArchitectures\n    };\n\n    return this.awsRequest('Lambda:publishLayerVersion', params, { checkError: true })\n      .then((result) => {\n        this.plugin.log('New layer version published...');\n        this.plugin.cacheObject.LayerVersionArn = result.LayerVersionArn;\n        return result;\n      });\n  }\n\n  async cleanUpLayers(retainVersions = 0) {\n    const params = {\n      LayerName: this.layerName\n    };\n\n    const response = await this.awsRequest('Lambda:listLayerVersions', params, { checkError: true });\n\n    if (response.LayerVersions.length <= retainVersions) {\n      this.plugin.log('Layers removal finished.\\n');\n      return;\n    }\n\n    if (this.plugin.settings.retainVersions) {\n      const deletionCandidates = this.selectVersionsToDelete(response.LayerVersions, retainVersions);\n\n      const deleteQueue = deletionCandidates.map((layerVersion) => {\n        this.plugin.log(`Removing layer version: ${layerVersion.Version}`);\n        return this.awsRequest('Lambda:deleteLayerVersion', {\n          LayerName: this.layerName,\n          VersionNumber: layerVersion.Version\n        }, { checkError: true });\n      });\n\n      await Promise.all(deleteQueue);\n\n      await this.cleanUpLayers(retainVersions);\n    }\n  }\n\n  selectVersionsToDelete(versions, retainVersions) {\n    return versions\n      .sort((a, b) => parseInt(a.Version) === parseInt(b.Version) ? 0 : parseInt(a.Version) > parseInt(b.Version) ? -1 : 1)\n      .slice(retainVersions);\n  }\n}\n\nmodule.exports = LayersService;\n"],"mappings":"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"}